// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id              String           @id @default(uuid())
  email           String           @unique
  currency        String
  emailConsent    Boolean          @default(false)
  expenses        Expense[]
  categories      Category[]
  goals           Goal[]
  assets          Asset[]
  liabilities     Liability[]
  netWorthHistory NetWorthHistory[]
  budgets         Budget[]
  savingsAccount  SavingsAccount?
}

model Expense {
  id          String   @id @default(cuid())
  amount      Float
  description String
  date        DateTime
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  category    Category @relation(fields: [categoryId], references: [id])
  categoryId  String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Category {
  id        String    @id @default(cuid())
  name      String
  icon      String
  user      User      @relation(fields: [userId], references: [id])
  userId    String
  expenses  Expense[]

  @@unique([name, userId])
}

model Goal {
  id            String   @id @default(cuid())
  name          String
  targetAmount  Float
  currentAmount Float    @default(0)
  user          User     @relation(fields: [userId], references: [id])
  userId        String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Asset {
  id        String   @id @default(cuid())
  name      String
  value     Float
  type      String // e.g., Investment, Property, Vehicle, Other
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Liability {
  id        String   @id @default(cuid())
  name      String
  balance   Float
  type      String // e.g., Loan, Mortgage, Credit Card, Other
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model NetWorthHistory {
  id        String   @id @default(cuid())
  date      DateTime
  netWorth  Float
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
}

model Budget {
  id         String   @id @default(cuid())
  amount     Float
  period     String // daily, weekly, monthly
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  archived   Boolean  @default(false)
}

model SavingsAccount {
  id        String   @id @default(cuid())
  balance   Float
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
